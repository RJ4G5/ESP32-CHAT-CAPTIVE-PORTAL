class ChatController{static SCROLL_CONFIG={STEP:40,INTERVAL:50,INDICATOR_MIN:12};static DOM_ELEMENTS={chatContainer:"msger-chat",scrollUpButton:"scroll-up",scrollDownButton:"scroll-down",scrollIndicator:"scroll-position",chatInput:"chat-input-text",sendButton:"sendButton",userCountDisplay:"userCount",userNameDisplay:"user_name",profileImage:".chat-header-perfil .msg-img"};static PREDEFINED_USERS=[{name:"Cupuaçu",avatar:"bot01-avatar",id:1},{name:"Jabuticaba",avatar:"bot02-avatar",id:2},{name:"Açaí",avatar:"bot03-avatar",id:3},{name:"Bacuri",avatar:"bot04-avatar",id:4},{name:"Uxi",avatar:"bot05-avatar",id:5},{name:"Sistema",id:6},{name:"Servidor",id:7}];constructor(){this.elements=this.initializeElements(),this.webSocket=null,this.currentUser=null,this.messageHistory=[],this.lastMessageId=0,this.scrollState={isActive:!1,timer:null},this.initializeChat()}initializeElements(){const e={};for(const[t,s]of Object.entries(ChatController.DOM_ELEMENTS))e[t]=s.startsWith(".")?document.querySelector(s):document.getElementById(s);return Object.values(e).some((e=>!e))&&console.error("Alguns elementos DOM não foram encontrados"),e}initializeChat(){this.setupScrollEvents(),this.scrollToBottom(),this.webSocket=this.createWebSocketConnection(),this.webSocket&&this.setupInputEvents()}setupScrollEvents(){const{chatContainer:e,scrollUpButton:t,scrollDownButton:s}=this.elements;this.updateScrollIndicator(),e.addEventListener("scroll",(()=>this.updateScrollIndicator()));[{element:t,direction:-1},{element:s,direction:1}].forEach((({element:e,direction:t})=>{this.addScrollEventListeners(e,(()=>this.scrollChat(t)))}))}addScrollEventListeners(e,t){const s=e=>{e.preventDefault(),this.scrollState.isActive||(this.scrollState.isActive=!0,t(),this.scrollState.timer=setInterval(t,ChatController.SCROLL_CONFIG.INTERVAL))},n=()=>{this.scrollState.timer&&(clearInterval(this.scrollState.timer),this.scrollState.timer=null),this.scrollState.isActive=!1};e.addEventListener("mousedown",s),e.addEventListener("touchstart",s),e.addEventListener("mouseup",n),e.addEventListener("touchend",n),e.addEventListener("touchcancel",n),e.addEventListener("click",t)}scrollChat(e){this.elements.chatContainer.scrollTop+=e*ChatController.SCROLL_CONFIG.STEP}updateScrollIndicator(){const{chatContainer:e,scrollIndicator:t}=this.elements,s=e.scrollHeight-e.clientHeight,n=e.scrollTop/s*100,a=Math.min(Math.max(n,ChatController.SCROLL_CONFIG.INDICATOR_MIN),100);t.style.bottom=100-a+"%"}scrollToBottom(){const{chatContainer:e}=this.elements;e.scrollTop=e.scrollHeight}createWebSocketConnection(){try{const e=new WebSocket("ws://192.168.4.1:81/ws");return e.onopen=()=>this.handleWebSocketOpen(),e.onmessage=e=>this.handleWebSocketMessage(e),e.onclose=e=>this.handleWebSocketClose(e),e.onerror=e=>this.handleWebSocketError(e),e}catch(e){return this.addSystemMessage("Falha ao conectar. Tente novamente mais tarde."),console.error("Erro ao criar WebSocket:",e),null}}setupInputEvents(){const{sendButton:e,chatInput:t}=this.elements;e.onclick=()=>this.sendMessage(),t.addEventListener("keydown",(e=>{"Enter"===e.key&&this.sendMessage()}))}handleWebSocketOpen(){this.addSystemMessage("Conectado ao servidor!")}handleWebSocketClose(e){this.addSystemMessage(`Desconectado do servidor (código: ${e.code})!`),setTimeout((()=>{this.addSystemMessage("Tentando reconectar..."),this.initializeChat()}),5e3)}handleWebSocketError(e){this.addSystemMessage("Erro de conexão"),console.error("Erro de WebSocket:",e)}handleWebSocketMessage(e){try{const t=JSON.parse(e.data);switch(t.type){case"message":this.handleNewMessage(t);break;case"identify":this.addSystemMessage(`${t.username||"Novo usuário"} se conectou`);break;case"idClient":this.handleClientIdentification(t);break;case"userCount":this.elements.userCountDisplay.textContent=t.count;break;case"userDesconect":this.handleUserDisconnect(t);break;case"syncRequest":this.handleSyncRequest(t);break;case"syncResponse":this.handleSyncResponse(t)}}catch(e){this.addSystemMessage("Erro ao processar mensagem"),console.error("Erro ao processar mensagem WebSocket:",e)}}handleSyncRequest(e){!e.targetClientId&&this.isWebSocketOpen()&&this.messageHistory.length>e.messageCount&&this.webSocket.send(JSON.stringify({type:"syncResponse",targetClientId:e.clientId,history:this.messageHistory,sender:this.currentUser.name,senderId:this.currentUser.id}))}handleSyncResponse(e){e.targetClientId===this.currentUser.id&&e.history?.length>0&&(0===this.messageHistory.length&&(this.elements.chatContainer.innerHTML=""),e.history.forEach((e=>{if(!this.messageHistory.some((t=>t.id===e.id&&t.userId===e.usuarioId))){const t=e.usuarioId===this.currentUser.id?"right-msg":"left-msg";this.addMessage(e.mensagem,t,e.usuarioId,e.data),e.id>this.lastMessageId&&(this.lastMessageId=e.id),this.messageHistory.push({id:e.id,timestamp:e.data,userId:e.usuarioId,content:e.mensagem})}})),this.addSystemMessage("Histórico sincronizado!"))}handleUserDisconnect(e){const t=this.getUserById(parseInt(e.content));this.addSystemMessage(`${t.name} desconectou`)}handleNewMessage(e){if(!this.messageHistory.some((t=>t.id===e.id&&t.userId===e.senderId))){const t=e.senderId===this.currentUser.id?"right-msg":"left-msg";this.addMessage(e.content,t,e.senderId,e.timestamp),this.messageHistory.push({id:e.id||++this.lastMessageId,timestamp:e.timestamp||this.getFormattedTime(),userId:e.senderId,content:e.content})}}handleClientIdentification(e){this.currentUser=this.getUserById(parseInt(e.content)),this.elements.userNameDisplay.textContent=this.currentUser.name,this.elements.profileImage.classList.add(this.currentUser.avatar),this.addSystemMessage(`Você está conectado como ${this.currentUser.name}`),this.webSocket.send(JSON.stringify({type:"identify",username:this.currentUser.name,clientId:this.currentUser.id})),setTimeout((()=>this.requestHistorySync()),1e3)}addMessage(e,t,s,n){const a=document.createElement("div");a.className=`msg ${"system"===t?"center-msg":t}`;const i=document.createElement("div");i.className="msg-bubble";const r=document.createElement("div");r.className="msg-info";const o=document.createElement("div");if(o.className="msg-text",o.textContent=e,s){const e=this.getUserById(s),t=document.createElement("div");t.className=`msg-img ${e.avatar}`,a.appendChild(t);const n=document.createElement("div");n.className="msg-info-name",n.textContent=e.name,r.appendChild(n)}if(n){const e=document.createElement("div");e.className="msg-info-time",e.textContent=n,r.appendChild(e)}if("system"===t){const e=document.createElement("div");e.className="msg-info-name",e.textContent="Sistema",r.appendChild(e)}i.appendChild(r),i.appendChild(o),a.appendChild(i),this.elements.chatContainer.appendChild(a),this.scrollToBottom()}addSystemMessage(e){this.addMessage(e,"system")}sendMessage(){const e=this.elements.chatInput.value.trim();if(!e||!this.isWebSocketOpen())return;const t=++this.lastMessageId,s=this.getFormattedTime();this.webSocket.send(JSON.stringify({type:"message",sender:this.currentUser.name,content:e,senderId:this.currentUser.id,id:t,timestamp:s})),this.addMessage(e,"right-msg",this.currentUser.id,s),this.messageHistory.push({id:t,timestamp:s,userId:this.currentUser.id,content:e}),this.elements.chatInput.value=""}getFormattedTime(){const e=new Date;return`${e.getDate().toString().padStart(2,"0")}/${(e.getMonth()+1).toString().padStart(2,"0")}/${e.getFullYear()} ${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}`}getUserById(e){return ChatController.PREDEFINED_USERS.find((t=>t.id===e))}isWebSocketOpen(){return this.webSocket&&this.webSocket.readyState===WebSocket.OPEN}requestHistorySync(){this.isWebSocketOpen()&&this.webSocket.send(JSON.stringify({type:"syncRequest",username:this.currentUser.name,clientId:this.currentUser.id,messageCount:this.messageHistory.length}))}}new ChatController;